package cn.thinkingdata.generate.code;

import cn.thinkingdata.generate.utils.DateUtil;
import cn.thinkingdata.ta.interceptor.CustomInterceptor;
import cn.thinkingdata.ta.interceptor.data.TaDataDo;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import lombok.Data;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

/**
 * @author ${author}
 * @email ${email}
 */
public class ${className} implements CustomInterceptor{
    private static final Logger logger = LoggerFactory.getLogger(${className}.class);

    private String offset;
#foreach ($column in $columns)
    private  $column.attrType  $column.attrname;
#end

    public void setOffset(String offset){
        this.offset = offset;
        }

    public  String getOffset(){
        return offset;
        }
#foreach ($column in $columns)

    public void set${column.attrName}($column.attrType $column.attrname){
            this.$column.attrname = $column.attrname;
    }

    public  $column.attrType get${column.attrName}(){
            return $column.attrname;
    }
#end


    @Override
    public TaDataDo transFrom(String s,String s1) {
        s = s.substring(s.indexOf("|"));
        if (s.endsWith("|")) {
            s = s+" ";
        }
        String[] split = s.split("\\|");
        //parse
        ${className} ${classname} = new ${className}();
        ${classname}.setOffset(split[0]);
        #foreach ($column in $columns)
${classname}.set${column.attrName}(split[${velocityCount}]);
        #end

        TaDataDo taDataDo = new TaDataDo();
        JSONObject propertyObj = JSON.parseObject(JSON.toJSONString(${classname}));
        taDataDo.setPropertyObj(propertyObj);

        taDataDo.setType("track");
        taDataDo.setEventName("${className}".toLowerCase());
        taDataDo.setAccountId(propertyObj.getString("role_id".toLowerCase()));
        if(propertyObj.containsKey("dteventtime".toLowerCase())){
            taDataDo.setTime(propertyObj.getDate("dteventtime".toLowerCase()));
        } else {
            taDataDo.setTime(new Date());
        }

        return taDataDo;

    }

    public static void main(String[] args) {
        //事件测试数据
        String data = "";
        ${className} xxx = new ${className}();
        TaDataDo taDataDo =  xxx.transFrom(data,"");
        System.out.println(JSON.toJSONString(taDataDo));
    }

}
